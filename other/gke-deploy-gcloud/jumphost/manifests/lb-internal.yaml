# Sample manifest for deploying internal LB on internal IP (takes few minutes to succeed!).
# Internal IP can be identified by "kubectl get ingress lb-internal".
# LB, ForwardingRule, NEG are created automatically.

# Prerequsite: preparing proxy-only subnet. Subnet must be in the same VPC (Network) as proxied workload (i.e. GKE cluster)
# gcloud compute networks subnets create $DSO_PROJECT-$DSO_GCP_REGION-proxy-only \
#     --network $DSO_PROJECT \
#     --region $DSO_GCP_REGION \
#     --range 192.168.224.0/20 \
#     --purpose=INTERNAL_HTTPS_LOAD_BALANCER \
#     --role=ACTIVE 

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hostname-internal
  annotations:
    kubernetes.io/ingress.class: "gce-internal"
spec:
  rules:
  - http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: hostname-internal
            port:
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: hostname-internal
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort 
  selector:
    app: hostname-internal
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 9376

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hostname-internal
  labels:
    app: hostname-internal
spec:
  selector:
    matchLabels:
      app: hostname-internal
  replicas: 3
  template:
    metadata:
      labels:
        app: hostname-internal
    spec:
      containers:
      - image: k8s.gcr.io/serve_hostname:v1.4
        name: hostname-internal
        ports:
        - containerPort: 9376
          protocol: TCP