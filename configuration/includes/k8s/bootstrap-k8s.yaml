---
- name: Bootstrap Kubernetes cluster
  hosts: jh
  become: yes
  gather_facts: no
  tasks:
    - name: Create /home/user/.kube directory
      file:
        path: /home/user/.kube
        state: directory
        owner: user
        group: user

    - name: Remove obsolete kubeconfig files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /home/user/.kube/config
        - /root/.kube/config

    - name: Import kubeconfig to user "user" homedir and store to GCP Secret Manager
      become_user: user
      shell: |
        PROJECT_ID=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep project_id | cut -d\" -f2)
        ZONE=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep zone | cut -d\" -f2)
        GKE_CLUSTER_NAME=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep gke_cluster_name | cut -d\" -f2)
        gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $ZONE --project $PROJECT_ID --internal-ip

        if gcloud secrets describe kubeconfig-$GKE_CLUSTER_NAME; then
          echo "Secret kubeconfig-$GKE_CLUSTER_NAME already exists."
        else
          gcloud secrets create kubeconfig-$GKE_CLUSTER_NAME --data-file=/home/user/.kube/config --labels=owner=dso,info=jumphost-generated
        fi

    - name: Install SealedSecrets Controller
      become_user: user
      shell: |
        helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
        helm repo update
        helm search repo sealed-secrets/sealed-secrets --versions | head

    - name: Helm install sealed-secrets
      become_user: user
      shell: |
        helm upgrade --install sealed-secrets sealed-secrets/sealed-secrets \
          --version {{ sealed_secret_version }} \
          --wait-for-jobs \
          --timeout 5m

    - name: Export secrets to GCP Secret Manager
      become_user: user
      shell: |
        PROJECT_ID=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep project_id | cut -d\" -f2)
        ZONE=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep zone | cut -d\" -f2)
        GKE_CLUSTER_NAME=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep gke_cluster_name | cut -d\" -f2)

        if gcloud secrets describe kubeconfig-$GKE_CLUSTER_NAME; then
          echo "Secret kubeconfig-$GKE_CLUSTER_NAME already exists."
        else
          gcloud secrets create kubeconfig-$GKE_CLUSTER_NAME --data-file=/home/user/.kube/config --labels=owner=dso,info=jumphost-generated
        fi





