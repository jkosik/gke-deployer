---
- name: Disable unattended updates
  hosts: jh
  become: true
  gather_facts: false
  roles:
    - role: ansible-apt
      vars:
        apt_unattended_updates_state: "disabled"

- name: Install packages and copy files
  hosts: jh
  become: true
  gather_facts: true
  tasks:
    - name: Install packages
      apt:
        state: present
        update_cache: true
        name:
          - bash-completion
          - curl
          - dnsutils
          - git
          - jq
          - wget

    - name: Install Stern
      get_url:
        url: "https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64      "
        dest: /usr/local/bin/stern
        mode: 0755

    - name: Create jumphost directory
      file:
        path: /home/user/jumphost
        state: directory

    - name: Copy k8s manifests
      copy:
        src: "{{ item }}"
        dest: /home/user/jumphost
      with_items:
        - manifests-postdeploy
        - manifests-samples

    - name: Copy Terraform vars to jumphost
      copy:
        src: "{{ playbook_dir }}/../infrastructure/{{ infra_env }}.tfvars"
        dest: "/home/user/jumphost"

    - name: Set permissions on /home/user/jumphost
      file:
        path: "/home/user/jumphost"
        recurse: true
        owner: "user"
        group: "user"

- name: Install kubectl and get and store kubeconfig
  hosts: jh
  become: true
  gather_facts: false
  tasks:
    - name: Run a shell command and register its output as a variable
      uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: true
      register: k8s_stable_version

    - name: Current stable kubectl version
      debug: msg={{ k8s_stable_version.content }}

    - name: Download kubectl binary
      get_url:
        url: "https://dl.k8s.io/release/{{ k8s_stable_version.content }}/bin/linux/amd64/kubectl"
        dest: /opt
        mode: 0440

    - name: Install kubectl
      shell: |
        install -o root -g root -m 0755 /opt/kubectl /usr/local/bin/kubectl

    - name: Configure kubectl command completition
      shell: |
        source /usr/share/bash-completion/bash_completion
        echo 'source <(kubectl completion bash)' >>~/.bashrc
        kubectl completion bash >/etc/bash_completion.d/kubectl

    - name: Create /home/user/.kube directory
      file:
        path: /home/user/.kube
        state: directory
        owner: user
        group: user

    - name: Remove file (delete file)
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /home/user/.kube/config
        - /root/.kube/config

    - name: Grab and import kubeconfig to user "user" homedir
      become_user: user
      shell: |
        PROJECT_ID=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep project_id | cut -d\" -f2)
        ZONE=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep zone | cut -d\" -f2)
        GKE_CLUSTER_NAME=$(cat /home/user/jumphost/{{ infra_env }}.tfvars | grep gke_cluster_name | cut -d\" -f2)
        gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $ZONE --project $PROJECT_ID --internal-ip
        if gcloud secrets describe kubeconfig-$GKE_CLUSTER_NAME; then
          echo "Secret kubeconfig-$GKE_CLUSTER_NAME already exists."
        else
          gcloud secrets create kubeconfig-$GKE_CLUSTER_NAME --data-file=/home/user/.kube/config --labels=owner=dso,info=jumphost-generated
        fi

- name: Install Helm
  hosts: jh
  become: true
  gather_facts: false
  tasks:
    - name: Download Helm installer
      get_url:
        url: "https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3"
        dest: /opt/get_helm.sh
        mode: 0700

    - name: Run Helm installer
      shell: /opt/get_helm.sh

    - name: Check installed Helm version
      shell: helm version
      register: helm_version

    - name: Currently installed Helm version
      debug: msg={{ helm_version.stdout }}

    - name: Install Helm autocompletion
      shell: helm completion bash > /etc/bash_completion.d/helm
