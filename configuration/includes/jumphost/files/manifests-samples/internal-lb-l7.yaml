# Internal L7 LB using Ingress

# https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balance-ingress
# When NEGs are used with GKE Ingress, the Ingress controller facilitates the creation of all aspects of the L7 load balancer.
# This includes creating the virtual IP address, forwarding rules, health checks, firewall rules, and more.
# Creating stanalone NEGs is also possible, but is overly complex: https://cloud.google.com/kubernetes-engine/docs/how-to/standalone-neg#attaching-int-https-lb

# Mandatory prerequisite is to create proxy-only subnet:
# https://cloud.google.com/load-balancing/docs/l7-internal/setting-up-l7-internal#configuring_the_proxy-only_subnet

# gcloud compute networks subnets create proxy-only-subnet \
#   --purpose=INTERNAL_HTTPS_LOAD_BALANCER \
#   --role=ACTIVE \
#   --region=europe-central2 \
#   --network=workload-318005 \
#   --range=192.168.224.0/20

# Check "kubectl get ingress" to find the IP to connect.

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-lb-l7
  annotations:
    kubernetes.io/ingress.class: "gce-internal"
spec:
  rules:
  - http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: internal-lb-l7
            port:
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: internal-lb-l7
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: internal-lb-l7
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 9376

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: internal-lb-l7
  labels:
    app: internal-lb-l7
spec:
  selector:
    matchLabels:
      app: internal-lb-l7
  replicas: 3
  template:
    metadata:
      labels:
        app: internal-lb-l7
    spec:
      containers:
      - image: k8s.gcr.io/serve_hostname:v1.4
        name: internal-lb-l7
        ports:
        - containerPort: 9376
          protocol: TCP