name: gke-deploy

on:
  push:
    branches-ignore:
      - 'docs'
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches-ignore:
      - 'docs'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    container: jkosik/terraform:1.0.1
    env:
      WORKING_DIR_INFRA: ./infrastructure
      WORKING_DIR_CONF: ./configuration
      GOOGLE_APPLICATION_CREDENTIALS: gcp-auth-json
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Set up GCP Cloud SDK for Client
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     service_account_key: ${{ secrets.SA_OWNER_WORKLOAD_318005 }}

      - name: GCP authentication
        run: |
          echo "${{ secrets.SA_OWNER_WORKLOAD_318005 }}" > gcp-auth-json
          #export GOOGLE_APPLICATION_CREDENTIALS=gcp-auth-json
        working-directory: ${{ env.WORKING_DIR_INFRA }}

      - name: Terraform checks
        env:
          TF_LOG: DEBUG
        run: |
          #export GOOGLE_APPLICATION_CREDENTIALS=gcp-auth-json
          #terraform fmt -check
          terraform init
          #terraform validate -no-color
        working-directory: ${{ env.WORKING_DIR_INFRA }}

      - name: Terraform Plan an apply
        env:
          TF_LOG: DEBUG
        run: |
          terraform plan -var-file=dev.tfvars
          terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ${{ env.WORKING_DIR_INFRA }}

      # - name: Check GKE readiness
      #   run: |
      #     c=0
      #     while true; do
      #       while [[ $(gcloud container clusters describe ${{ env.DSO_GKE_CLUSTER_NAME }} --format="value(status)") != "RUNNING" ]] ; do
      #         ((c++)) && ((c>60)) && printf "Timeout to deploy K8S cluster exceeded\n" && exit 1
      #         sleep 5
      #         echo "Checking K8S cluster build..."
      #       done
      #       echo "K8S cluster ${{ env.DSO_GKE_CLUSTER_NAME }} in RUNNING state"
      #       break
      #     done;          