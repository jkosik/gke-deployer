name: deploy-gke

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-gke:
    runs-on: ubuntu-latest
    container: jkosik/cloud-deployer
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Source project.vars
        run: |
          source gcp-client/project.vars
          echo "Deploying to $DSO_PROJECT"

      # - name: Deploy GKE    
      #   run: |
      #     source deployment.sh

      - name: Auth to GCP as client SA
        run: |
          source gcp-client/project.vars
          ls
          echo "Deploying to $DSO_PROJECT"
          # normally deployment.yaml generates SA_OWNER key for Client GCP project
          echo "${{secrets.SA_OWNER_DSO_GKE_CLIENT_1}}" > creds-sa-owner-${DSO_PROJECT}.json
          ls 
          gcloud auth activate-service-account --key-file=creds-sa-owner-${DSO_PROJECT}.json --project=$DSO_PROJECT

      - name: Jumphost tests
        run: |
          gcloud container clusters describe $DSO_PROJECT --format="value(status)"
          echo ${{secrets.GCP_SSH_KEY}} > /tmp/gcp-ssh-key
          gcloud compute instances describe jh --format='get(networkInterfaces[0].accessConfigs[0].natIP)'
          JH_IP=$(gcloud compute instances describe jh --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          ssh -i /tmp/gcp-ssh-key user@$JH_IP "gcloud projects list"
          ssh -i /tmp/gcp-ssh-key user@$JH_IP "kubectl get ns"

 