trigger:
  #batch: true
  branches:
    include:
      - prod
    exclude:
      - main
      - docs
  paths:
    include:
      - .azure-devops/*
      - infrastructure/*
      - configuration/*

##trigger: none

pr:
  branches:
    include:
      - prod
    exclude:
      - main
      - docs
  paths:
      include:
        - .azure-devops/*
        - infrastructure/*
        - configuration/*

variables:
- name: TF_LOG
  value: DEBUG
- name: CONF_DIR
  value: configuration
- name: INFRA_DIR
  value: infrastructure
- name: INFRA_ENV
  value: $(Build.SourceBranchName)

# Params for manually triggered pipelines
parameters:
- name: environment
  displayName: 'Environment'
  type: string
  default: 'prod'

pool:
  vmImage: 'ubuntu-20.04'

stages:
  - stage: infrastructure
    jobs:
    - job: infrastructure
      container: jkosik/terraform:1.0.1
      steps:
        - bash: |
            echo $(Build.SourceBranch)
            echo Current and source Branch is: ${{ variables.INFRA_ENV }}
          displayName: Environment setting

        - bash: terraform fmt -check -diff -recursive
          displayName: "terraform fmt"
          workingDirectory: ${{ variables.INFRA_DIR }}

        - bash: terraform init
          env:
            GOOGLE_CREDENTIALS: $(GCP_SA) # Secrets have to be called explicitly
          displayName: "terraform init"
          workingDirectory: ${{ variables.INFRA_DIR }}

        - bash: terraform validate -no-color
          env:
            GOOGLE_CREDENTIALS: $(GCP_SA)
          displayName: "terraform validate"
          workingDirectory: ${{ variables.INFRA_DIR }}

        - bash: terraform plan -var-file=${{ variables.INFRA_ENV }}.tfvars
          env:
            GOOGLE_CREDENTIALS: $(GCP_SA)
          displayName: "terraform plan"
          workingDirectory: ${{ variables.INFRA_DIR }}

        - bash: terraform apply -auto-approve -var-file=${{ variables.INFRA_ENV }}.tfvars
          env:
            GOOGLE_CREDENTIALS: $(GCP_SA)
          displayName: "terraform apply"
          workingDirectory: ${{ variables.INFRA_DIR }}

    - job: infrastructure_healthcheck
      dependsOn: infrastructure
      container: jkosik/terraform:1.0.1
      steps:
        - bash: |
            echo $(Build.SourceBranch)
            echo Current and source Branch is: ${{ variables.INFRA_ENV }}
          displayName: Environment setting

